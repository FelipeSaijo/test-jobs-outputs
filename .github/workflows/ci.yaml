name: Developer's PR Check Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  changes:
    name: "Detect Directory Changes"
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.detect.outputs.matrix }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Get commit hash
        id: hash
        run: |
          git checkout ${{ steps.branch-names.outputs.current_branch }}
          hash=$(git log -n 1 --pretty=format:"%H")
          echo $hash
          echo "hash=$hash" >> $GITHUB_OUTPUT 

      - name: Find Changed Directories
        id: detect
        run: |
          changed_dirs=$(git diff-tree --no-commit-id --name-only -r ${{ steps.hash.outputs.hash }} | \
          grep -vE '^(.github|\.idea|boot|gradle)/' | cut -d'/' -f1 | uniq | \
          awk 'BEGIN { printf("[\n") } { if (NR > 1) printf(",\n"); printf("  {\n    \"module\": \"%s\"\n  }", $0) } END { printf("\n]\n") }')
          
          echo "changed=$(jq -r -c . <<< $changed_dirs)" >> $GITHUB_OUTPUT 

      - run: echo ${{ steps.detect.outputs.matrix }}

  deploy:
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.changes.outputs.changed) }}
      fail-fast: false
      max-parallel: 1

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract target branch name
        id: branch
        run: |
          echo "branch=${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT

      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Merge Diff
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: ${{ steps.branch.outputs.branch }}
          target_branch: ${{ steps.branch-names.outputs.current_branch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Image Version
        run: |
          echo "teste-${{ steps.branch.outputs.branch }}" >> ./${{ matrix.module }}/test.txt

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          branch: ${{ steps.branch.outputs.branch }}
          directory: '.'
          message: ":recycle: refactor: Update ${{ matrix.module }}/test.txt"